/*!
 * N2.js v0.0.1
 * (c) 2018 Peng Yubin
 */

(function(global,factory){typeof exports==='object'&&typeof module!=='undefined'?module.exports=factory():typeof define==='function'&&define.amd?define(factory):(global.N2=factory());})(this,(function(){var exports={};class Vec2{constructor(x,y){this.x=x;this.y=y;}
clone(){return new Vec2(this.x,this.y);}
lengthSqr(){return this.x*this.x+this.y*this.y;}
length(){return Math.sqrt(this.lengthSqr());}
normalize(){var inv=1/this.length();this.x*=inv;this.y*=inv;return this;}
assign(v){this.x=v.x;this.y=v.y;return this;}
rotatedCCW(){return new Vec2(-this.y,this.x);}
rotatedCW(){return new Vec2(this.y,-this.x);}
add(v){this.x+=v.x;this.y+=v.y;return this;}
sub(v){this.x-=v.x;this.y-=v.y;return this;}
addOfMultiplied(v,f){this.x+=v.x*f;this.y+=v.y*f;return this;}
subOfMultiplied(v,f){this.x-=v.x*f;this.y-=v.y*f;return this;}
multiply(f){this.x*=f;this.y*=f;return this;}
dot(v){return this.x*v.x+this.y*v.y;}
cross(v){return this.x*v.y-this.y*v.x;}
angle(v){return Math.acos(this.dot(v)/(this.length()*v.length()));}
distanceSqr(v){return this.x*v.x+this.y*v.y;}
distance(v){return Math.sqrt(this.distanceSqr());}};function polarCCW(angle){return new Vec2(Math.cos(angle),Math.sin(angle));}
function polarCW(angle){return new Vec2(Math.cos(angle),-Math.sin(angle));}
exports.Vec2=Vec2;exports.polarCCW=polarCCW;exports.polarCW=polarCW;class World{constructor(option){this.bodies=[];this.timeStep=1/60;this.onTicks=[];this.ticker=new Ticker();this.gravity=new Vec2(0,300);option|={};for(var key in option){if(option.hasOwnProperty(key)&&this.hasOwnProperty(key)){this[key]=option[key];}}}
start(){this.timer=this.ticker.timeout(function(dt){this.tick(dt);if(this.timer)
this.start();}.bind(this),this.timeStep);}
pause(){this.ticker.cancel(this.timer);this.timer=undefined;}
tick(dt){for(var k in this.bodies){var body=this.bodies[k];body.tick(dt);}
for(var i in this.onTicks){this.onTicks[i](dt);}}
add(body){body.force=this.gravity.clone().multiply(body.mass);this.bodies.push(body);}
onTick(callback){this.onTicks.push(callback);}}
exports.World=World;class Ticker{constructor(){this.lastTime=0;}
timeout(callback,timeStep){var currTime=new Date().getTime();var timeToCall=timeStep*1000-currTime+this.lastTime;currTime+=Math.max(0,timeToCall);var id=window.setTimeout(function(){callback(timeStep);},timeToCall);this.lastTime=currTime;return id;}
cancel(id)
{window.clearTimeout(id);}}
exports.Ticker=Ticker;class AABB{constructor(l,t,r,b){this.l=l;this.t=t;this.r=r;this.b=b;}
doesCollide(c){return!(this.b<c.t||this.t>c.b||this.r<c.l||this.l>c.r);}}
class Body{constructor(option){this.position=new Vec2(0,0);this.mass=0;this.velocity=new Vec2(0,0);this.rotation=0;this.angularVelocity=0;this.invRotationalInertia=0;for(var key in option){if(option.hasOwnProperty(key)&&this.hasOwnProperty(key)){this[key]=option[key];}}
this.force=new Vec2(0,0);if(this.mass!=0){this.invMass=1/this.mass;}else{this.invMass=0;}}
applyImpulse(impulse,point){var rA=point.clone().sub(this.position);this.angularVelocity+=rA.cross(impulse)*this.invRotationalInertia;this.velocity.addOfMultiplied(impulse,this.invMass);}
getSCAAt(p,n)
{var rA=p.clone().sub(this.position);var rCn=rA.cross(n);return rCn*rCn*this.invRotationalInertia+this.invMass;}
getVelocityAt(p)
{var rA=p.clone().sub(this.position);var rv=rA.rotatedCCW().multiply(this.angularVelocity);return rv.add(this.velocity);}
intergrateVelocity(dt){this.velocity.add(this.force.clone().multiply(this.invMass*dt));}
intergratePosition(dt){this.position.add(this.velocity.clone().multiply(dt));}
intergrateRotation(dt){this.rotation+=this.angularVelocity*dt;}
tick(dt){this.intergrateVelocity(dt);this.intergratePosition(dt);this.intergrateRotation(dt);}}
exports.Body=Body;class Circle extends Body{constructor(option){super(option);this.r=option.r;this.rSqr=this.r*this.r;this.invRotationalInteria=2*this.invMass/this.rSqr;}}
exports.Circle=Circle;class Rect extends Body{constructor(option){super(option);this.size=option.size;this.halfsize=this.size.clone().multiply(0.5);this.sizeSqr=this.size.lengthSqr();this.invRotationalInertia=12*this.invMass/this.sizeSqr;this.rotationalInertia=1/this.invRotationalInertia;}
getAABB()
{var lt=this.position.clone().sub(this.halfsize);var rb=this.position.clone().add(this.halfsize);return new AABB(lt.x,lt.y,rb.x,rb.y);}
getNormalAt(p)
{var rA=p.clone().sub(this.position);var n=new polarCCW(this.rotation);if(Math.abs(rA.dot(n))<=this.halfsize.x)
return n;}
getVertices()
{var bx=polarCCW(this.rotation);var by=bx.rotatedCCW();var dx=bx.multiply(this.halfsize.x);var dy=by.multiply(this.halfsize.y);var ax=this.position.clone().add(dx);var sx=this.position.clone().sub(dx);return[ax.clone().add(dy),ax.sub(dy),sx.clone().add(dy),sx.sub(dy),];}}
exports.Rect=Rect;exports.Collide={react_Circle_Circle:function(a,b)
{var d=b.position.clone().sub(a.position);var distance=d.length();if(distance<=a.r+b.r){var rdis=1/distance;var v=b.velocity.clone().sub(a.velocity);var von=v.dot(d)*rdis/v.length();if(von<=0){v.multiply(von);b.applyImpulse(v.clone().multiply(a.mass),d.clone().multiply(-b.r*rdis).add(b.position));a.applyImpulse(v.multiply(-b.mass),d.multiply(a.r*rdis).add(a.position));}}},react_Vertiable_NormableStatic:function(a,b)
{var vertices=a.getVertices();for(var i in vertices){var point=vertices[i];var n=b.getNormalAt(point);if(n===undefined)
continue;var k=0.9;var rsca=-(1+k)/a.getSCAAt(point,n);var imp=a.getVelocityAt(point).dot(n)*rsca;if(imp<0)
continue;var impulse=n.multiply(imp);a.applyImpulse(impulse,point);}},};class Render{constructor(selector){this.canvas=document.querySelector(selector);this.ctx=this.canvas.getContext('2d');}
clear(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);}
circle(x,y,r,rotation){this.ctx.save();this.ctx.beginPath();this.ctx.setTransform(Math.cos(rotation),Math.sin(rotation),-Math.sin(rotation),Math.cos(rotation),x,y);this.ctx.arc(0,0,r,0,2*Math.PI,false);this.ctx.lineTo(0,0)
this.ctx.arc(0,0,3,0,2*Math.PI,false);this.ctx.stroke();this.ctx.restore();}
rect(x,y,w,h,rotation){this.ctx.save();this.ctx.beginPath();this.ctx.setTransform(Math.cos(rotation),Math.sin(rotation),-Math.sin(rotation),Math.cos(rotation),x,y);this.ctx.strokeRect(-w/2,-h/2,w,h);this.ctx.beginPath();this.ctx.moveTo(w/2,0);this.ctx.lineTo(0,0);this.ctx.arc(0,0,3,0,2*Math.PI,false);this.ctx.closePath();this.ctx.stroke();this.ctx.restore();}}
exports.Render=Render;return exports;}));